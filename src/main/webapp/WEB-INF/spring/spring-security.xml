<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/secure/**" access="hasRole('ROLE_USER')" />

		<form-login login-page="/login" 
			default-target-url="/user/initialize" 
			authentication-failure-url="/login?error"
			username-parameter="username" 
			password-parameter="password" />

		<logout logout-success-url="/login" />

		<!-- <csrf /> -->
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<!-- <user-service> -->
			<!-- <user name="user" password="123456" authorities="ROLE_USER" /> -->
			<!-- <user name="admin" password="123456" authorities="ROLE_ADMIN" /> -->
			<!-- </user-service> -->
			<jdbc-user-service data-source-ref="dataSourceDriver"
				users-by-username-query="select username,password, true from users where username=?"
				authorities-by-username-query="select u.username, r.role from users u, user_roles r where u.role_id = r.id and u.username =? " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>